{"version":3,"sources":["components/Filter/Filter.module.css","components/FormContact/FormContact.module.css","components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInpitId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","onChange","id","numberInputId","button","btnText","size","color","Component","Filter","filterLabel","filterInput","ContactList","contacts","onDeleteContact","list","map","listItem","listItemText","onClick","App","filter","addContact","newContact","find","contact","alert","changeFilter","getVisibleContacts","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","FormContact","ContactsList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,kBCA1ED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,QAAU,+B,uCCAxKD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,aAAe,mCAAmC,OAAS,+B,oMCmE1IC,E,4MA9DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAACJ,GACd,MAAyB,EAAKR,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACdM,EAAEK,iBACF,EAAKC,MAAMC,SAASd,EAAMC,GAC1B,EAAKc,S,2CAGP,WACEC,KAAKN,SAAS,CACZV,KAAM,GACNC,OAAQ,O,oBAIZ,WACE,OACE,uBAAMgB,UAAWC,IAAEC,KAAML,SAAUE,KAAKL,aAAxC,UACE,wBAAOM,UAAWC,IAAEE,MAAOC,QAASL,KAAKd,YAAzC,iBAEE,uBACEe,UAAWC,IAAEI,MACbC,KAAK,OACLvB,KAAK,OACLS,MAAOO,KAAKjB,MAAMC,KAClBwB,SAAUR,KAAKV,aACfmB,GAAIT,KAAKd,iBAGb,wBAAOe,UAAWC,IAAEE,MAAOC,QAASL,KAAKU,cAAzC,mBAEE,uBACET,UAAWC,IAAEI,MACbC,KAAK,OACLvB,KAAK,SACLS,MAAOO,KAAKjB,MAAME,OAClBuB,SAAUR,KAAKV,aACfmB,GAAIT,KAAKU,mBAIb,yBAAQT,UAAWC,IAAES,OAAQJ,KAAK,SAAlC,UACE,sBAAMN,UAAWC,IAAEU,QAAnB,yBAA+C,IAC/C,cAAC,IAAD,CAAkBC,KAAK,OAAOC,MAAM,gC,GAxDpBC,a,iBCgBXC,EAjBA,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACb,wBAAOP,UAAWC,IAAEe,YAApB,kCAEE,uBACEhB,UAAWC,IAAEgB,YACbX,KAAK,OACLd,MAAOA,EACPe,SAAUA,Q,gBCoBDW,EA1BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIpB,UAAWC,IAAEoB,KAAjB,SACGF,EAASG,KAAI,gBAAGd,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIgB,UAAWC,IAAEsB,SAAjB,UACE,uBAAMvB,UAAWC,IAAEuB,aAAnB,UAAkCzC,EAAlC,OACA,sBAAMiB,UAAWC,IAAEuB,aAAnB,SAAkCxC,IAClC,yBACEgB,UAAWC,IAAES,OACbJ,KAAK,SACLmB,QAAS,kBAAML,EAAgBZ,IAHjC,oBAKS,cAAC,IAAD,CAAqBI,KAAK,cARLJ,SCsEvBkB,G,kNAtEb5C,MAAQ,CACNqC,SAAU,CACR,CAAEX,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhD2C,OAAQ,GACR5C,KAAM,GACNC,OAAQ,I,EAGV4C,WAAa,SAAC7C,EAAMC,GAClB,IAAQmC,EAAa,EAAKrC,MAAlBqC,SACFU,EAAa,CACjBrB,GAAItB,IAAQC,WACZJ,OACAC,UAEEmC,EAASW,MAAK,SAACC,GAAD,OAAaA,EAAQhD,OAAS8C,EAAW9C,QACzDiD,MAAM,GAAD,OAAIH,EAAW9C,KAAf,6BAIP,EAAKU,UAAS,gBAAG0B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEU,GAAH,mBAAkBV,S,EAI9Bc,aAAe,SAAC3C,GACd,EAAKG,SAAS,CAAEkC,OAAQrC,EAAEC,cAAcC,S,EAG1C0C,mBAAqB,WACnB,MAA6B,EAAKpD,MAA1B6C,EAAR,EAAQA,OAER,OAFA,EAAgBR,SAEAQ,QAAO,SAACI,GAAD,OACrBA,EAAQhD,KAAKoD,cAAcC,SAAST,EAAOQ,mB,EAI/CE,cAAgB,SAACC,GACf,EAAK7C,UAAS,SAAC8C,GAAD,MAAgB,CAC5BpB,SAAUoB,EAAUpB,SAASQ,QAC3B,SAACI,GAAD,OAAaA,EAAQvB,KAAO8B,U,4CAKlC,WACE,IAAQX,EAAW5B,KAAKjB,MAAhB6C,OACFa,EAAkBzC,KAAKmC,qBAE7B,OACE,qCACE,2CAEA,cAACO,EAAD,CAAa5C,SAAUE,KAAK6B,aAE5B,0CACA,cAAC,EAAD,CAAQpC,MAAOmC,EAAQpB,SAAUR,KAAKkC,eACtC,cAACS,EAAD,CACEvB,SAAUqB,EACVpB,gBAAiBrB,KAAKsC,uB,GAhEdvB,cCKH6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d03e7ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1fRWP\",\"filterInput\":\"Filter_filterInput__1KD2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__3JiLK\",\"label\":\"FormContact_label__z21FH\",\"input\":\"FormContact_input__1Q44b\",\"button\":\"FormContact_button__9l7vM\",\"btnText\":\"FormContact_btnText__3Xl8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3Y0UU\",\"listItem\":\"ContactsList_listItem__20I4H\",\"listItemText\":\"ContactsList_listItemText__1Bz-S\",\"button\":\"ContactsList_button__3pPxr\"};","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./FormContact.module.css\";\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInpitId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          <span className={s.btnText}>Add contact</span>{\" \"}\n          <AiOutlineUserAdd size=\"20px\" color=\"rgb(130, 27, 112)\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./ContactsList.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AiOutlineUserDelete } from \"react-icons/ai\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.listItem} key={id}>\n        <span className={s.listItemText}>{name}:</span>\n        <span className={s.listItemText}>{number}</span>\n        <button\n          className={s.button}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete <AiOutlineUserDelete size=\"15px\" />\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport FormContact from \"./components/FormContact/FormContact\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport \"./app.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n\n        <FormContact onSubmit={this.addContact} />\n\n        <h2>Contants</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        ></ContactsList>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}